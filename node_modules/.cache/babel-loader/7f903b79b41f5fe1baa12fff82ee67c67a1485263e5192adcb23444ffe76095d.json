{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\RevenueSources.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './RevenueSources.css';\nimport revenueSourcesData from '../assets/data/revenueSources';\nimport availableBalancesData from '../assets/data/availableBalances';\nimport pdfReports from '../assets/data/pdfReports';\nimport { generateMultiplePDFs } from '../utils/pdfGenerator';\nimport pdfIcon from '../assets/images/icons/pdf.svg';\nimport searchIcon from '../assets/images/icons/search.svg';\nimport filterIcon from '../assets/images/icons/filters.svg';\nimport { Slider, SliderTrack, SliderRange, SliderThumb } from '@ark-ui/react/slider';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CombinedComponent() {\n  _s();\n  const [revenueSources, setRevenueSources] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSources, setSelectedSources] = useState([]);\n  const [showFilter, setShowFilter] = useState(false);\n  const [maxAmountFilter, setMaxAmountFilter] = useState(0);\n  const [maxAmount, setMaxAmount] = useState(0);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const sliderRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const sortedData = [...revenueSourcesData].sort((a, b) => a.revenue_source_name.localeCompare(b.revenue_source_name));\n      setRevenueSources(sortedData);\n\n      // Calculate the maximum available amount\n      const amounts = availableBalancesData.map(bal => bal.availableamount);\n      const calculatedMaxAmount = Math.max(...amounts);\n      setMaxAmount(calculatedMaxAmount);\n      setMaxAmountFilter(calculatedMaxAmount);\n      setIsDataLoaded(true);\n    };\n    fetchData();\n  }, []);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const filteredSources = revenueSources.filter(source => source.revenue_source_name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleCardClick = sourceId => {\n    setSelectedSources(prev => prev.includes(sourceId) ? prev.filter(id => id !== sourceId) : [...prev, sourceId]);\n  };\n  const handleDownloadSelected = () => {\n    const selectedReports = selectedSources.map(sourceId => {\n      const source = revenueSources.find(s => s.revenue_source_id === sourceId);\n      return pdfReports.find(report => report.revenue_source_name === source.revenue_source_name);\n    });\n    generateMultiplePDFs(selectedReports);\n  };\n  const isDownloadDisabled = selectedSources.length === 0;\n  const getCurrencySymbol = currencyCode => {\n    switch (currencyCode) {\n      case 'EUR':\n        return '€';\n      case 'GBP':\n        return '£';\n      case 'USD':\n        return '$';\n      default:\n        return currencyCode;\n    }\n  };\n  const toggleFilter = () => {\n    setShowFilter(!showFilter);\n  };\n  const handleAmountFilterChange = details => {\n    setMaxAmountFilter(details[1]); // Update the max amount filter\n  };\n  const filterByAmount = balance => {\n    return balance.availableamount <= maxAmountFilter;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-component-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combined-component-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Revenue Sources and Available Balances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"Search Icon\",\n            className: \"search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search revenue sources...\",\n            value: searchTerm,\n            onChange: handleSearch,\n            className: \"combined-component-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-and-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownloadSelected,\n              className: \"download-selected-btn\",\n              disabled: isDownloadDisabled,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: pdfIcon,\n                alt: \"PDF Icon\",\n                className: \"pdf-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), \"Download Selected Reports\", selectedSources.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-count\",\n                children: selectedSources.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip\",\n              children: \"Please select at least one Revenue Source to download.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: toggleFilter,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: filterIcon,\n                alt: \"Filter Icon\",\n                className: \"filter-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), showFilter && isDataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Filter by Available Amount\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Slider.Root, {\n                defaultValue: [0, maxAmount],\n                max: maxAmount,\n                onChange: handleAmountFilterChange,\n                children: [/*#__PURE__*/_jsxDEV(Slider.Track, {\n                  children: /*#__PURE__*/_jsxDEV(Slider.Range, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Slider.Thumb, {\n                  index: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Slider.Thumb, {\n                  index: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Max: \", maxAmountFilter]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combined-component-grid\",\n      children: filteredSources.map(source => {\n        const balance = availableBalancesData.find(bal => bal.revenue_source_name === source.revenue_source_name);\n        const hasBalance = balance && filterByAmount(balance);\n        const isSelected = selectedSources.includes(source.revenue_source_id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `combined-component-card ${isSelected ? 'selected' : ''} ${hasBalance ? '' : 'disabled'}`,\n          onClick: () => handleCardClick(source.revenue_source_id),\n          children: [isSelected && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pdfIcon,\n            alt: \"PDF Icon\",\n            className: \"card-pdf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: source.revenue_source_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), hasBalance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"available-amount-label\",\n              children: \"Available Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"available-amount-value\",\n              children: [getCurrencySymbol(balance.currency_code), balance.availableamount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"You don't have available amounts for this.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, source.revenue_source_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_s(CombinedComponent, \"+3MpNd9hF9+HIZ+lpItUkMCDLfU=\");\n_c = CombinedComponent;\nexport default CombinedComponent;\nvar _c;\n$RefreshReg$(_c, \"CombinedComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","revenueSourcesData","availableBalancesData","pdfReports","generateMultiplePDFs","pdfIcon","searchIcon","filterIcon","Slider","SliderTrack","SliderRange","SliderThumb","jsxDEV","_jsxDEV","Fragment","_Fragment","CombinedComponent","_s","revenueSources","setRevenueSources","searchTerm","setSearchTerm","selectedSources","setSelectedSources","showFilter","setShowFilter","maxAmountFilter","setMaxAmountFilter","maxAmount","setMaxAmount","isDataLoaded","setIsDataLoaded","sliderRef","fetchData","sortedData","sort","a","b","revenue_source_name","localeCompare","amounts","map","bal","availableamount","calculatedMaxAmount","Math","max","handleSearch","event","target","value","filteredSources","filter","source","toLowerCase","includes","handleCardClick","sourceId","prev","id","handleDownloadSelected","selectedReports","find","s","revenue_source_id","report","isDownloadDisabled","length","getCurrencySymbol","currencyCode","toggleFilter","handleAmountFilterChange","details","filterByAmount","balance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","onClick","disabled","Root","defaultValue","Track","Range","Thumb","index","hasBalance","isSelected","currency_code","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/RevenueSources.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './RevenueSources.css';\r\nimport revenueSourcesData from '../assets/data/revenueSources';\r\nimport availableBalancesData from '../assets/data/availableBalances';\r\nimport pdfReports from '../assets/data/pdfReports';\r\nimport { generateMultiplePDFs } from '../utils/pdfGenerator';\r\nimport pdfIcon from '../assets/images/icons/pdf.svg';\r\nimport searchIcon from '../assets/images/icons/search.svg';\r\nimport filterIcon from '../assets/images/icons/filters.svg';\r\nimport { Slider, SliderTrack, SliderRange, SliderThumb } from '@ark-ui/react/slider';\r\n\r\nfunction CombinedComponent() {\r\n  const [revenueSources, setRevenueSources] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedSources, setSelectedSources] = useState([]);\r\n  const [showFilter, setShowFilter] = useState(false);\r\n  const [maxAmountFilter, setMaxAmountFilter] = useState(0);\r\n  const [maxAmount, setMaxAmount] = useState(0);\r\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n  const sliderRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const sortedData = [...revenueSourcesData].sort((a, b) =>\r\n        a.revenue_source_name.localeCompare(b.revenue_source_name)\r\n      );\r\n      setRevenueSources(sortedData);\r\n\r\n      // Calculate the maximum available amount\r\n      const amounts = availableBalancesData.map(bal => bal.availableamount);\r\n      const calculatedMaxAmount = Math.max(...amounts);\r\n      setMaxAmount(calculatedMaxAmount);\r\n      setMaxAmountFilter(calculatedMaxAmount)\r\n\r\n      setIsDataLoaded(true);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchTerm(event.target.value);\r\n  };\r\n\r\n  const filteredSources = revenueSources.filter(source =>\r\n    source.revenue_source_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  const handleCardClick = (sourceId) => {\r\n    setSelectedSources(prev =>\r\n      prev.includes(sourceId)\r\n        ? prev.filter(id => id !== sourceId)\r\n        : [...prev, sourceId]\r\n    );\r\n  };\r\n\r\n  const handleDownloadSelected = () => {\r\n    const selectedReports = selectedSources.map(sourceId => {\r\n      const source = revenueSources.find(s => s.revenue_source_id === sourceId);\r\n      return pdfReports.find(report => report.revenue_source_name === source.revenue_source_name);\r\n    });\r\n    generateMultiplePDFs(selectedReports);\r\n  };\r\n\r\n  const isDownloadDisabled = selectedSources.length === 0;\r\n\r\n  const getCurrencySymbol = (currencyCode) => {\r\n    switch (currencyCode) {\r\n      case 'EUR': return '€';\r\n      case 'GBP': return '£';\r\n      case 'USD': return '$';\r\n      default: return currencyCode;\r\n    }\r\n  };\r\n\r\n  const toggleFilter = () => {\r\n    setShowFilter(!showFilter);\r\n  };\r\n\r\n    const handleAmountFilterChange = (details) => {\r\n        setMaxAmountFilter(details[1]); // Update the max amount filter\r\n    };\r\n\r\n    const filterByAmount = (balance) => {\r\n        return balance.availableamount <= maxAmountFilter;\r\n    };\r\n\r\n  return (\r\n    <div className=\"combined-component-container\">\r\n      <div className=\"combined-component-header\">\r\n        <h2>Revenue Sources and Available Balances</h2>\r\n        <div className=\"header-actions\">\r\n          <div className=\"search-container\">\r\n            <img src={searchIcon} alt=\"Search Icon\" className=\"search-icon\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search revenue sources...\"\r\n              value={searchTerm}\r\n              onChange={handleSearch}\r\n              className=\"combined-component-search\"\r\n            />\r\n          </div>\r\n          <div className=\"download-and-filter\">\r\n            <div className=\"tooltip-container\">\r\n              <button\r\n                onClick={handleDownloadSelected}\r\n                className=\"download-selected-btn\"\r\n                disabled={isDownloadDisabled}\r\n              >\r\n                <img src={pdfIcon} alt=\"PDF Icon\" className=\"pdf-icon\" />\r\n                Download Selected Reports\r\n                {selectedSources.length > 0 && (\r\n                  <span className=\"selected-count\">{selectedSources.length}</span>\r\n                )}\r\n              </button>\r\n              <div className=\"tooltip\">\r\n                Please select at least one Revenue Source to download.\r\n              </div>\r\n            </div>\r\n            <div className=\"filter-wrapper\">\r\n              <button className=\"filter-button\" onClick={toggleFilter}>\r\n                <img src={filterIcon} alt=\"Filter Icon\" className=\"filter-icon\" />\r\n              </button>\r\n              {showFilter && isDataLoaded && (\r\n                <div className=\"filter-container\">\r\n                  <h3>Filter by Available Amount</h3>\r\n                  <Slider.Root \r\n                                        defaultValue={[0, maxAmount]}\r\n                                        max={maxAmount}\r\n                                        onChange={handleAmountFilterChange}\r\n                                    >\r\n                    <Slider.Track>\r\n                      <Slider.Range />\r\n                    </Slider.Track>\r\n                    <Slider.Thumb index={0} />\r\n                    <Slider.Thumb index={1} />\r\n                  </Slider.Root>\r\n                  <div>\r\n                    Max: {maxAmountFilter}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"combined-component-grid\">\r\n        {filteredSources.map(source => {\r\n          const balance = availableBalancesData.find(bal => bal.revenue_source_name === source.revenue_source_name);\r\n          const hasBalance = balance && filterByAmount(balance);\r\n          const isSelected = selectedSources.includes(source.revenue_source_id);\r\n\r\n          return (\r\n            <div\r\n              key={source.revenue_source_id}\r\n              className={`combined-component-card ${isSelected ? 'selected' : ''} ${hasBalance ? '' : 'disabled'}`}\r\n              onClick={() => handleCardClick(source.revenue_source_id)}\r\n            >\r\n              {isSelected && <img src={pdfIcon} alt=\"PDF Icon\" className=\"card-pdf-icon\" />}\r\n              <h3>{source.revenue_source_name}</h3>\r\n              {hasBalance ? (\r\n                <>\r\n                  <p className=\"available-amount-label\">Available Amount</p>\r\n                  <p className=\"available-amount-value\">{getCurrencySymbol(balance.currency_code)}{balance.availableamount}</p>\r\n                </>\r\n              ) : (\r\n                <p>You don't have available amounts for this.</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CombinedComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,sBAAsB;AAC7B,OAAOC,kBAAkB,MAAM,+BAA+B;AAC9D,OAAOC,qBAAqB,MAAM,kCAAkC;AACpE,OAAOC,UAAU,MAAM,2BAA2B;AAClD,SAASC,oBAAoB,QAAQ,uBAAuB;AAC5D,OAAOC,OAAO,MAAM,gCAAgC;AACpD,OAAOC,UAAU,MAAM,mCAAmC;AAC1D,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,SAASC,MAAM,EAAEC,WAAW,EAAEC,WAAW,EAAEC,WAAW,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErF,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,eAAe,EAAEC,kBAAkB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACgC,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMkC,SAAS,GAAGhC,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMkC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,UAAU,GAAG,CAAC,GAAGjC,kBAAkB,CAAC,CAACkC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KACnDD,CAAC,CAACE,mBAAmB,CAACC,aAAa,CAACF,CAAC,CAACC,mBAAmB,CAC3D,CAAC;MACDnB,iBAAiB,CAACe,UAAU,CAAC;;MAE7B;MACA,MAAMM,OAAO,GAAGtC,qBAAqB,CAACuC,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,eAAe,CAAC;MACrE,MAAMC,mBAAmB,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,OAAO,CAAC;MAChDX,YAAY,CAACe,mBAAmB,CAAC;MACjCjB,kBAAkB,CAACiB,mBAAmB,CAAC;MAEvCb,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9B3B,aAAa,CAAC2B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,eAAe,GAAGjC,cAAc,CAACkC,MAAM,CAACC,MAAM,IAClDA,MAAM,CAACf,mBAAmB,CAACgB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACnC,UAAU,CAACkC,WAAW,CAAC,CAAC,CAC5E,CAAC;EAED,MAAME,eAAe,GAAIC,QAAQ,IAAK;IACpClC,kBAAkB,CAACmC,IAAI,IACrBA,IAAI,CAACH,QAAQ,CAACE,QAAQ,CAAC,GACnBC,IAAI,CAACN,MAAM,CAACO,EAAE,IAAIA,EAAE,KAAKF,QAAQ,CAAC,GAClC,CAAC,GAAGC,IAAI,EAAED,QAAQ,CACxB,CAAC;EACH,CAAC;EAED,MAAMG,sBAAsB,GAAGA,CAAA,KAAM;IACnC,MAAMC,eAAe,GAAGvC,eAAe,CAACmB,GAAG,CAACgB,QAAQ,IAAI;MACtD,MAAMJ,MAAM,GAAGnC,cAAc,CAAC4C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,iBAAiB,KAAKP,QAAQ,CAAC;MACzE,OAAOtD,UAAU,CAAC2D,IAAI,CAACG,MAAM,IAAIA,MAAM,CAAC3B,mBAAmB,KAAKe,MAAM,CAACf,mBAAmB,CAAC;IAC7F,CAAC,CAAC;IACFlC,oBAAoB,CAACyD,eAAe,CAAC;EACvC,CAAC;EAED,MAAMK,kBAAkB,GAAG5C,eAAe,CAAC6C,MAAM,KAAK,CAAC;EAEvD,MAAMC,iBAAiB,GAAIC,YAAY,IAAK;IAC1C,QAAQA,YAAY;MAClB,KAAK,KAAK;QAAE,OAAO,GAAG;MACtB,KAAK,KAAK;QAAE,OAAO,GAAG;MACtB,KAAK,KAAK;QAAE,OAAO,GAAG;MACtB;QAAS,OAAOA,YAAY;IAC9B;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB7C,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAEC,MAAM+C,wBAAwB,GAAIC,OAAO,IAAK;IAC1C7C,kBAAkB,CAAC6C,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,cAAc,GAAIC,OAAO,IAAK;IAChC,OAAOA,OAAO,CAAC/B,eAAe,IAAIjB,eAAe;EACrD,CAAC;EAEH,oBACEb,OAAA;IAAK8D,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3C/D,OAAA;MAAK8D,SAAS,EAAC,2BAA2B;MAAAC,QAAA,gBACxC/D,OAAA;QAAA+D,QAAA,EAAI;MAAsC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CnE,OAAA;QAAK8D,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7B/D,OAAA;UAAK8D,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC/B/D,OAAA;YAAKoE,GAAG,EAAE3E,UAAW;YAAC4E,GAAG,EAAC,aAAa;YAACP,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClEnE,OAAA;YACEsE,IAAI,EAAC,MAAM;YACXC,WAAW,EAAC,2BAA2B;YACvClC,KAAK,EAAE9B,UAAW;YAClBiE,QAAQ,EAAEtC,YAAa;YACvB4B,SAAS,EAAC;UAA2B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNnE,OAAA;UAAK8D,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC/D,OAAA;YAAK8D,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAChC/D,OAAA;cACEyE,OAAO,EAAE1B,sBAAuB;cAChCe,SAAS,EAAC,uBAAuB;cACjCY,QAAQ,EAAErB,kBAAmB;cAAAU,QAAA,gBAE7B/D,OAAA;gBAAKoE,GAAG,EAAE5E,OAAQ;gBAAC6E,GAAG,EAAC,UAAU;gBAACP,SAAS,EAAC;cAAU;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,6BAEzD,EAAC1D,eAAe,CAAC6C,MAAM,GAAG,CAAC,iBACzBtD,OAAA;gBAAM8D,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAEtD,eAAe,CAAC6C;cAAM;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAChE;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK,CAAC,eACTnE,OAAA;cAAK8D,SAAS,EAAC,SAAS;cAAAC,QAAA,EAAC;YAEzB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNnE,OAAA;YAAK8D,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7B/D,OAAA;cAAQ8D,SAAS,EAAC,eAAe;cAACW,OAAO,EAAEhB,YAAa;cAAAM,QAAA,eACtD/D,OAAA;gBAAKoE,GAAG,EAAE1E,UAAW;gBAAC2E,GAAG,EAAC,aAAa;gBAACP,SAAS,EAAC;cAAa;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5D,CAAC,EACRxD,UAAU,IAAIM,YAAY,iBACzBjB,OAAA;cAAK8D,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC/B/D,OAAA;gBAAA+D,QAAA,EAAI;cAA0B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACnCnE,OAAA,CAACL,MAAM,CAACgF,IAAI;gBACUC,YAAY,EAAE,CAAC,CAAC,EAAE7D,SAAS,CAAE;gBAC7BkB,GAAG,EAAElB,SAAU;gBACfyD,QAAQ,EAAEd,wBAAyB;gBAAAK,QAAA,gBAEvD/D,OAAA,CAACL,MAAM,CAACkF,KAAK;kBAAAd,QAAA,eACX/D,OAAA,CAACL,MAAM,CAACmF,KAAK;oBAAAd,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACfnE,OAAA,CAACL,MAAM,CAACoF,KAAK;kBAACC,KAAK,EAAE;gBAAE;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC,eAC1BnE,OAAA,CAACL,MAAM,CAACoF,KAAK;kBAACC,KAAK,EAAE;gBAAE;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACf,CAAC,eACdnE,OAAA;gBAAA+D,QAAA,GAAK,OACE,EAAClD,eAAe;cAAA;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnE,OAAA;MAAK8D,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCzB,eAAe,CAACV,GAAG,CAACY,MAAM,IAAI;QAC7B,MAAMqB,OAAO,GAAGxE,qBAAqB,CAAC4D,IAAI,CAACpB,GAAG,IAAIA,GAAG,CAACJ,mBAAmB,KAAKe,MAAM,CAACf,mBAAmB,CAAC;QACzG,MAAMwD,UAAU,GAAGpB,OAAO,IAAID,cAAc,CAACC,OAAO,CAAC;QACrD,MAAMqB,UAAU,GAAGzE,eAAe,CAACiC,QAAQ,CAACF,MAAM,CAACW,iBAAiB,CAAC;QAErE,oBACEnD,OAAA;UAEE8D,SAAS,EAAE,2BAA2BoB,UAAU,GAAG,UAAU,GAAG,EAAE,IAAID,UAAU,GAAG,EAAE,GAAG,UAAU,EAAG;UACrGR,OAAO,EAAEA,CAAA,KAAM9B,eAAe,CAACH,MAAM,CAACW,iBAAiB,CAAE;UAAAY,QAAA,GAExDmB,UAAU,iBAAIlF,OAAA;YAAKoE,GAAG,EAAE5E,OAAQ;YAAC6E,GAAG,EAAC,UAAU;YAACP,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7EnE,OAAA;YAAA+D,QAAA,EAAKvB,MAAM,CAACf;UAAmB;YAAAuC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACpCc,UAAU,gBACTjF,OAAA,CAAAE,SAAA;YAAA6D,QAAA,gBACE/D,OAAA;cAAG8D,SAAS,EAAC,wBAAwB;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAC1DnE,OAAA;cAAG8D,SAAS,EAAC,wBAAwB;cAAAC,QAAA,GAAER,iBAAiB,CAACM,OAAO,CAACsB,aAAa,CAAC,EAAEtB,OAAO,CAAC/B,eAAe;YAAA;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,eAC7G,CAAC,gBAEHnE,OAAA;YAAA+D,QAAA,EAAG;UAA0C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACjD;QAAA,GAbI3B,MAAM,CAACW,iBAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAc1B,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/D,EAAA,CAnKQD,iBAAiB;AAAAiF,EAAA,GAAjBjF,iBAAiB;AAqK1B,eAAeA,iBAAiB;AAAC,IAAAiF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}