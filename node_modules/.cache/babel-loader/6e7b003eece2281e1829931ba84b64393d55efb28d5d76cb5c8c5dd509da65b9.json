{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\TransactionTable.jsx\",\n  _s = $RefreshSig$();\n// src/components/TransactionTable.jsx\nimport React, { useState, useEffect } from 'react';\nimport './TransactionTable.css';\nimport transactionsData from '../assets/data/transactions';\nimport { Pagination } from '@ark-ui/react/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionTable() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10;\n  const totalTransactions = transactionsData.length;\n  const totalPages = Math.ceil(totalTransactions / pageSize);\n  const maxVisiblePages = 8; // Define el número máximo de páginas visibles en la paginación\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\n      setTransactions(paginatedTransactions);\n    };\n    fetchData();\n  }, [currentPage]);\n  const handlePageChange = details => {\n    setCurrentPage(details.page);\n  };\n  const handleEllipsisClick = direction => {\n    if (direction === 'prev') {\n      setCurrentPage(Math.max(1, currentPage - 10));\n    } else if (direction === 'next') {\n      setCurrentPage(Math.min(totalPages, currentPage + 10));\n    }\n  };\n  const getVisiblePageNumbers = () => {\n    let pages = [];\n    if (totalPages <= maxVisiblePages) {\n      // Si hay menos o igual que maxVisiblePages páginas, mostrar todas\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // Siempre mostrar la primera página\n      pages.push(1);\n      if (currentPage <= 3) {\n        // Si estamos en las primeras 3 páginas\n        for (let i = 2; i <= 5; i++) {\n          pages.push(i);\n        }\n        pages.push('+10');\n      } else if (currentPage >= totalPages - 2) {\n        // Si estamos en las últimas 3 páginas\n        pages.push('-10');\n        for (let i = totalPages - 4; i < totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        // En cualquier otra página\n        pages.push('-10');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('+10');\n      }\n\n      // Siempre mostrar la última página\n      pages.push(totalPages);\n    }\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ark-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination.Root, {\n        count: totalTransactions,\n        pageSize: pageSize,\n        page: currentPage,\n        onPageChange: handlePageChange,\n        children: [/*#__PURE__*/_jsxDEV(Pagination.PrevTrigger, {\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), getVisiblePageNumbers().map((page, index) => page === '-10' || page === '+10' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ellipsis-button\",\n          onClick: () => handleEllipsisClick(page === '-10' ? 'prev' : 'next'),\n          children: page\n        }, `ellipsis-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          value: page,\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.NextTrigger, {\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ark-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"Customer Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Revenue Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Transaction Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"ark-table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.customername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.revenuesourcename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.currencycode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.transactiondate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionTable, \"qo5JSBeqhftRa9jbFN9qLasMAnk=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useState","useEffect","transactionsData","Pagination","jsxDEV","_jsxDEV","TransactionTable","_s","transactions","setTransactions","currentPage","setCurrentPage","pageSize","totalTransactions","length","totalPages","Math","ceil","maxVisiblePages","fetchData","Promise","resolve","setTimeout","startIndex","endIndex","paginatedTransactions","slice","handlePageChange","details","page","handleEllipsisClick","direction","max","min","getVisiblePageNumbers","pages","i","push","className","children","Root","count","onPageChange","PrevTrigger","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","Item","value","NextTrigger","transaction","id","customername","revenuesourcename","currencycode","transactiondate","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/TransactionTable.jsx"],"sourcesContent":["// src/components/TransactionTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './TransactionTable.css';\r\nimport transactionsData from '../assets/data/transactions';\r\nimport { Pagination } from '@ark-ui/react/pagination';\r\n\r\nfunction TransactionTable() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 10;\r\n  const totalTransactions = transactionsData.length;\r\n  const totalPages = Math.ceil(totalTransactions / pageSize);\r\n  const maxVisiblePages = 8; // Define el número máximo de páginas visibles en la paginación\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      const startIndex = (currentPage - 1) * pageSize;\r\n      const endIndex = startIndex + pageSize;\r\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\r\n      setTransactions(paginatedTransactions);\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentPage]);\r\n\r\n  const handlePageChange = (details) => {\r\n    setCurrentPage(details.page);\r\n  };\r\n\r\n  const handleEllipsisClick = (direction) => {\r\n    if (direction === 'prev') {\r\n      setCurrentPage(Math.max(1, currentPage - 10));\r\n    } else if (direction === 'next') {\r\n      setCurrentPage(Math.min(totalPages, currentPage + 10));\r\n    }\r\n  };\r\n  \r\n  const getVisiblePageNumbers = () => {\r\n    let pages = [];\r\n    if (totalPages <= maxVisiblePages) {\r\n      // Si hay menos o igual que maxVisiblePages páginas, mostrar todas\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      // Siempre mostrar la primera página\r\n      pages.push(1);\r\n  \r\n      if (currentPage <= 3) {\r\n        // Si estamos en las primeras 3 páginas\r\n        for (let i = 2; i <= 5; i++) {\r\n          pages.push(i);\r\n        }\r\n        pages.push('+10');\r\n      } else if (currentPage >= totalPages - 2) {\r\n        // Si estamos en las últimas 3 páginas\r\n        pages.push('-10');\r\n        for (let i = totalPages - 4; i < totalPages; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        // En cualquier otra página\r\n        pages.push('-10');\r\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n          pages.push(i);\r\n        }\r\n        pages.push('+10');\r\n      }\r\n  \r\n      // Siempre mostrar la última página\r\n      pages.push(totalPages);\r\n    }\r\n    return pages;\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"ark-table-container\">\r\n      <div className=\"pagination-container\">\r\n        <Pagination.Root\r\n          count={totalTransactions}\r\n          pageSize={pageSize}\r\n          page={currentPage}\r\n          onPageChange={handlePageChange}\r\n        >\r\n          <Pagination.PrevTrigger>\r\n            Anterior\r\n          </Pagination.PrevTrigger>\r\n          {getVisiblePageNumbers().map((page, index) =>\r\n            page === '-10' || page === '+10'? (\r\n              <button\r\n                key={`ellipsis-${index}`}\r\n                className=\"ellipsis-button\"\r\n                onClick={() => handleEllipsisClick(page === '-10' ? 'prev' : 'next')}\r\n              >\r\n                {page}\r\n              </button>\r\n            ) : (\r\n              <Pagination.Item key={page} value={page}>\r\n                {page}\r\n              </Pagination.Item>\r\n            )\r\n          )}\r\n          <Pagination.NextTrigger>\r\n            Siguiente\r\n          </Pagination.NextTrigger>\r\n        </Pagination.Root>\r\n      </div>\r\n\r\n        <table className=\"ark-table\">\r\n            <caption>Customer Transactions</caption>\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"ark-table-header\">ID</th>\r\n                    <th className=\"ark-table-header\">Customer Name</th>\r\n                    <th className=\"ark-table-header\">Revenue Source</th>\r\n                    <th className=\"ark-table-header\">Currency Code</th>\r\n                    <th className=\"ark-table-header\">Transaction Date</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {transactions.map(transaction => (\r\n                    <tr key={transaction.id} className=\"ark-table-row\">\r\n                        <td className=\"ark-table-cell\">{transaction.id}</td>\r\n                        <td className=\"ark-table-cell\">{transaction.customername}</td>\r\n                        <td className=\"ark-table-cell\">{transaction.revenuesourcename}</td>\r\n                        <td className=\"ark-table-cell\">{transaction.currencycode}</td>\r\n                        <td className=\"ark-table-cell\">{transaction.transactiondate}</td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}