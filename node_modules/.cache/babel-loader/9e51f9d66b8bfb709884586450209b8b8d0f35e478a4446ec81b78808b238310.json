{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\TransactionTable.jsx\",\n  _s = $RefreshSig$();\n// src/components/TransactionTable.jsx\nimport React, { useState, useEffect } from 'react';\nimport './TransactionTable.css';\nimport transactionsData from '../assets/data/transactions';\nimport { Pagination } from '@ark-ui/react/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionTable() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10;\n  const totalTransactions = transactionsData.length;\n  const totalPages = Math.ceil(totalTransactions / pageSize);\n  useEffect(() => {\n    const fetchData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\n      setTransactions(paginatedTransactions);\n    };\n    fetchData();\n  }, [currentPage]);\n  const handlePageChange = details => {\n    setCurrentPage(details.page);\n  };\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const totalPageButtons = 6; // Número total de botones de página a mostrar (excluyendo Anterior/Siguiente)\n\n    if (totalPages <= totalPageButtons) {\n      // Si hay 6 páginas o menos, mostrar todas\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Siempre mostrar la primera página\n      pageNumbers.push(1);\n      if (currentPage <= 3) {\n        // Si estamos en las primeras 3 páginas\n        for (let i = 2; i <= 5; i++) {\n          pageNumbers.push(i);\n        }\n        pageNumbers.push('...');\n      } else if (currentPage >= totalPages - 2) {\n        // Si estamos en las últimas 3 páginas\n        pageNumbers.push('...');\n        for (let i = totalPages - 4; i < totalPages; i++) {\n          pageNumbers.push(i);\n        }\n      } else {\n        // En cualquier otra página\n        pageNumbers.push('...');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pageNumbers.push(i);\n        }\n        pageNumbers.push('...');\n      }\n\n      // Siempre mostrar la última página\n      pageNumbers.push(totalPages);\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ark-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination.Root, {\n        count: totalTransactions,\n        pageSize: pageSize,\n        page: currentPage,\n        onPageChange: handlePageChange,\n        children: [/*#__PURE__*/_jsxDEV(Pagination.PrevTrigger, {\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), getPageNumbers().map((page, index) => page === '...' ? /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n          children: \"...\"\n        }, `ellipsis-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          value: page,\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.NextTrigger, {\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ark-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"Customer Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Revenue Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Transaction Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"ark-table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.customername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.revenuesourcename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.currencycode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.transactiondate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionTable, \"qo5JSBeqhftRa9jbFN9qLasMAnk=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useState","useEffect","transactionsData","Pagination","jsxDEV","_jsxDEV","TransactionTable","_s","transactions","setTransactions","currentPage","setCurrentPage","pageSize","totalTransactions","length","totalPages","Math","ceil","fetchData","Promise","resolve","setTimeout","startIndex","endIndex","paginatedTransactions","slice","handlePageChange","details","page","getPageNumbers","pageNumbers","totalPageButtons","i","push","className","children","Root","count","onPageChange","PrevTrigger","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Ellipsis","Item","value","NextTrigger","transaction","id","customername","revenuesourcename","currencycode","transactiondate","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/TransactionTable.jsx"],"sourcesContent":["// src/components/TransactionTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './TransactionTable.css';\r\nimport transactionsData from '../assets/data/transactions';\r\nimport { Pagination } from '@ark-ui/react/pagination';\r\n\r\nfunction TransactionTable() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const pageSize = 10;\r\n    const totalTransactions = transactionsData.length;\r\n    const totalPages = Math.ceil(totalTransactions / pageSize);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await new Promise(resolve => setTimeout(resolve, 500));\r\n            const startIndex = (currentPage - 1) * pageSize;\r\n            const endIndex = startIndex + pageSize;\r\n            const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\r\n            setTransactions(paginatedTransactions);\r\n        };\r\n\r\n        fetchData();\r\n    }, [currentPage]);\r\n\r\n    const handlePageChange = (details) => {\r\n        setCurrentPage(details.page);\r\n    };\r\n\r\n    const getPageNumbers = () => {\r\n        const pageNumbers = [];\r\n        const totalPageButtons = 6; // Número total de botones de página a mostrar (excluyendo Anterior/Siguiente)\r\n        \r\n        if (totalPages <= totalPageButtons) {\r\n            // Si hay 6 páginas o menos, mostrar todas\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                pageNumbers.push(i);\r\n            }\r\n        } else {\r\n            // Siempre mostrar la primera página\r\n            pageNumbers.push(1);\r\n            \r\n            if (currentPage <= 3) {\r\n                // Si estamos en las primeras 3 páginas\r\n                for (let i = 2; i <= 5; i++) {\r\n                    pageNumbers.push(i);\r\n                }\r\n                pageNumbers.push('...');\r\n            } else if (currentPage >= totalPages - 2) {\r\n                // Si estamos en las últimas 3 páginas\r\n                pageNumbers.push('...');\r\n                for (let i = totalPages - 4; i < totalPages; i++) {\r\n                    pageNumbers.push(i);\r\n                }\r\n            } else {\r\n                // En cualquier otra página\r\n                pageNumbers.push('...');\r\n                for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n                    pageNumbers.push(i);\r\n                }\r\n                pageNumbers.push('...');\r\n            }\r\n            \r\n            // Siempre mostrar la última página\r\n            pageNumbers.push(totalPages);\r\n        }\r\n        \r\n        return pageNumbers;\r\n    };\r\n\r\n    return (\r\n        <div className=\"ark-table-container\">\r\n            <div className=\"pagination-container\">\r\n                <Pagination.Root \r\n                    count={totalTransactions} \r\n                    pageSize={pageSize} \r\n                    page={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                >\r\n                    <Pagination.PrevTrigger>\r\n                        Anterior\r\n                    </Pagination.PrevTrigger>\r\n                    {getPageNumbers().map((page, index) => \r\n                        page === '...' ? (\r\n                            <Pagination.Ellipsis key={`ellipsis-${index}`}>...</Pagination.Ellipsis>\r\n                        ) : (\r\n                            <Pagination.Item key={page} value={page}>\r\n                                {page}\r\n                            </Pagination.Item>\r\n                        )\r\n                    )}\r\n                    <Pagination.NextTrigger>\r\n                        Siguiente\r\n                    </Pagination.NextTrigger>\r\n                </Pagination.Root>\r\n            </div>\r\n\r\n            <table className=\"ark-table\">\r\n                <caption>Customer Transactions</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"ark-table-header\">ID</th>\r\n                        <th className=\"ark-table-header\">Customer Name</th>\r\n                        <th className=\"ark-table-header\">Revenue Source</th>\r\n                        <th className=\"ark-table-header\">Currency Code</th>\r\n                        <th className=\"ark-table-header\">Transaction Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map(transaction => (\r\n                        <tr key={transaction.id} className=\"ark-table-row\">\r\n                            <td className=\"ark-table-cell\">{transaction.id}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.customername}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.revenuesourcename}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.currencycode}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.transactiondate}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransactionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}