{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\RevenueSources.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './RevenueSources.css';\nimport revenueSourcesData from '../assets/data/revenueSources';\nimport availableBalancesData from '../assets/data/availableBalances';\nimport pdfReports from '../assets/data/pdfReports';\nimport { generateMultiplePDFs } from '../utils/pdfGenerator';\nimport pdfIcon from '../assets/images/icons/pdf.svg';\nimport searchIcon from '../assets/images/icons/search.svg';\nimport filterIcon from '../assets/images/icons/filters.svg';\nimport { Slider } from '@ark-ui/react';\nimport gsap from 'gsap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CombinedComponent() {\n  _s();\n  const [revenueSources, setRevenueSources] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedSources, setSelectedSources] = useState([]);\n  const [showFilter, setShowFilter] = useState(false);\n  const [amountFilterValue, setAmountFilterValue] = useState(0);\n  const [maxAmount, setMaxAmount] = useState(0);\n  const [minAmount, setMinAmount] = useState(0);\n  const [isDataLoaded, setIsDataLoaded] = useState(false);\n  const [selectedCurrencies, setSelectedCurrencies] = useState(['EUR', 'GBP', 'USD']);\n  const availableCurrencies = ['EUR', 'GBP', 'USD'];\n  const filterRef = useRef(null);\n  const cardRefs = useRef([]);\n\n  // Initialize filteredSources and filteredBalances with an empty array\n  const [filteredSources, setFilteredSources] = useState([]);\n  const [filteredBalances, setFilteredBalances] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const sortedData = [...revenueSourcesData].sort((a, b) => a.revenue_source_name.localeCompare(b.revenue_source_name));\n      setRevenueSources(sortedData);\n      const amounts = availableBalancesData.map(bal => bal.availableamount);\n      const calculatedMaxAmount = Math.max(...amounts, 0);\n      setMaxAmount(calculatedMaxAmount);\n      setAmountFilterValue(calculatedMaxAmount);\n      setIsDataLoaded(true);\n    };\n    fetchData();\n    const handleClickOutside = event => {\n      if (filterRef.current && !filterRef.current.contains(event.target)) {\n        setShowFilter(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Handler to update filteredSources based on searchTerm\n  useEffect(() => {\n    const newFilteredSources = revenueSources.filter(source => source.revenue_source_name.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredSources(newFilteredSources);\n  }, [revenueSources, searchTerm]);\n\n  // Handler to update filteredBalances based on amountFilterValue and selectedCurrencies\n  useEffect(() => {\n    const newFilteredBalances = availableBalancesData.filter(balance => {\n      const amountValid = balance.availableamount >= 0 && balance.availableamount <= amountFilterValue;\n      const currencyValid = selectedCurrencies.includes(balance.currency_code);\n      return amountValid && currencyValid;\n    });\n    setFilteredBalances(newFilteredBalances);\n  }, [amountFilterValue, selectedCurrencies]);\n\n  // Function to handle card transitions\n  const updateCardVisibility = useCallback(() => {\n    cardRefs.current.forEach((card, index) => {\n      if (card) {\n        const source = filteredSources[index];\n        const balance = filteredBalances.find(bal => bal.revenue_source_name === (source === null || source === void 0 ? void 0 : source.revenue_source_name));\n        const hasBalance = balance !== undefined;\n        if (!hasBalance) {\n          gsap.to(card, {\n            opacity: 0,\n            height: 'auto',\n            duration: 0.3,\n            display: 'none',\n            overwrite: true\n          });\n        } else {\n          gsap.to(card, {\n            opacity: 1,\n            height: 'auto',\n            duration: 0.3,\n            display: 'block',\n            overwrite: true\n          });\n        }\n      }\n    });\n  }, [filteredBalances, filteredSources]);\n  useEffect(() => {\n    if (isDataLoaded) {\n      updateCardVisibility();\n    }\n  }, [filteredBalances, filteredSources, isDataLoaded, updateCardVisibility]);\n  const handleSearch = event => {\n    setSearchTerm(event.target.value);\n  };\n  const handleCardClick = sourceId => {\n    setSelectedSources(prev => prev.includes(sourceId) ? prev.filter(id => id !== sourceId) : [...prev, sourceId]);\n  };\n  const handleDownloadSelected = () => {\n    const selectedReports = selectedSources.map(sourceId => {\n      const source = revenueSources.find(s => s.revenue_source_id === sourceId);\n      return pdfReports.find(report => report.revenue_source_name === source.revenue_source_name);\n    });\n    generateMultiplePDFs(selectedReports);\n  };\n  const isDownloadDisabled = selectedSources.length === 0;\n  const getCurrencySymbol = currencyCode => {\n    switch (currencyCode) {\n      case 'EUR':\n        return '€';\n      case 'GBP':\n        return '£';\n      case 'USD':\n        return '$';\n      default:\n        return currencyCode;\n    }\n  };\n  const toggleFilter = () => {\n    setShowFilter(!showFilter);\n  };\n  const handleAmountFilterChange = value => {\n    setAmountFilterValue(value.value[0]);\n  };\n  const handleCurrencyToggle = currency => {\n    setSelectedCurrencies(prev => prev.includes(currency) ? prev.filter(c => c !== currency) : [...prev, currency]);\n  };\n\n  // Function to determine the color class based on available amount\n  const getColorClass = amount => {\n    const firstThird = maxAmount / 3;\n    const secondThird = 2 * firstThird;\n    if (amount <= firstThird) {\n      return 'red';\n    } else if (amount <= secondThird) {\n      return 'orange';\n    } else {\n      return 'green';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"combined-component-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combined-component-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Revenue Sources and Available Balances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: searchIcon,\n            alt: \"Search Icon\",\n            className: \"search-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search revenue sources...\",\n            value: searchTerm,\n            onChange: handleSearch,\n            className: \"combined-component-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-and-filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tooltip-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDownloadSelected,\n              className: \"download-selected-btn\",\n              disabled: isDownloadDisabled,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: pdfIcon,\n                alt: \"PDF Icon\",\n                className: \"pdf-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), \"Download Selected Reports\", selectedSources.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"selected-count\",\n                children: selectedSources.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tooltip\",\n              children: \"Please select at least one Revenue Source to download.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button\",\n              onClick: toggleFilter,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: filterIcon,\n                alt: \"Filter Icon\",\n                className: \"filter-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), showFilter && isDataLoaded && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filter-container\",\n              ref: filterRef,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filter-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Filter by Available Amount\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"slider-container\",\n                  children: [/*#__PURE__*/_jsxDEV(Slider.Root, {\n                    defaultValue: [0, maxAmount],\n                    min: minAmount,\n                    max: maxAmount,\n                    onValueChange: handleAmountFilterChange,\n                    \"aria-label\": \"Volume\",\n                    children: /*#__PURE__*/_jsxDEV(Slider.Control, {\n                      children: [/*#__PURE__*/_jsxDEV(Slider.Track, {\n                        children: /*#__PURE__*/_jsxDEV(Slider.Range, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Slider.Thumb, {\n                        index: 0,\n                        children: [/*#__PURE__*/_jsxDEV(Slider.HiddenInput, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 227,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"slider-value-label\",\n                          children: amountFilterValue\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 228,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 222,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"slider-values\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: minAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: maxAmount\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filter-card\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Filter by Currency\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"currency-filter-grid\",\n                  children: availableCurrencies.map(currency => /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: `currency-button ${selectedCurrencies.includes(currency) ? 'selected' : ''}`,\n                    onClick: () => handleCurrencyToggle(currency),\n                    children: currency\n                  }, currency, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combined-component-grid\",\n      children: filteredSources.map((source, index) => {\n        const balance = filteredBalances.find(bal => bal.revenue_source_name === source.revenue_source_name);\n        const hasBalance = balance !== undefined;\n        const isSelected = selectedSources.includes(source.revenue_source_id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `combined-component-card ${isSelected ? 'selected' : ''}`,\n          onClick: () => handleCardClick(source.revenue_source_id),\n          ref: el => cardRefs.current[index] = el,\n          children: [isSelected && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pdfIcon,\n            alt: \"PDF Icon\",\n            className: \"card-pdf-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: source.revenue_source_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 29\n          }, this), balance ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"available-amount-label\",\n              children: \"Available Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: `available-amount-value ${getColorClass(balance.availableamount)}`,\n              children: [getCurrencySymbol(balance.currency_code), balance.availableamount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No available amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this)]\n        }, source.revenue_source_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n}\n_s(CombinedComponent, \"+YNxvdQRemzNFkzNRbYB9dft0Ro=\");\n_c = CombinedComponent;\nexport default CombinedComponent;\nvar _c;\n$RefreshReg$(_c, \"CombinedComponent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","revenueSourcesData","availableBalancesData","pdfReports","generateMultiplePDFs","pdfIcon","searchIcon","filterIcon","Slider","gsap","jsxDEV","_jsxDEV","Fragment","_Fragment","CombinedComponent","_s","revenueSources","setRevenueSources","searchTerm","setSearchTerm","selectedSources","setSelectedSources","showFilter","setShowFilter","amountFilterValue","setAmountFilterValue","maxAmount","setMaxAmount","minAmount","setMinAmount","isDataLoaded","setIsDataLoaded","selectedCurrencies","setSelectedCurrencies","availableCurrencies","filterRef","cardRefs","filteredSources","setFilteredSources","filteredBalances","setFilteredBalances","fetchData","sortedData","sort","a","b","revenue_source_name","localeCompare","amounts","map","bal","availableamount","calculatedMaxAmount","Math","max","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","newFilteredSources","filter","source","toLowerCase","includes","newFilteredBalances","balance","amountValid","currencyValid","currency_code","updateCardVisibility","forEach","card","index","find","hasBalance","undefined","to","opacity","height","duration","display","overwrite","handleSearch","value","handleCardClick","sourceId","prev","id","handleDownloadSelected","selectedReports","s","revenue_source_id","report","isDownloadDisabled","length","getCurrencySymbol","currencyCode","toggleFilter","handleAmountFilterChange","handleCurrencyToggle","currency","c","getColorClass","amount","firstThird","secondThird","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","placeholder","onChange","onClick","disabled","ref","Root","defaultValue","min","onValueChange","Control","Track","Range","Thumb","HiddenInput","isSelected","el","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/RevenueSources.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport './RevenueSources.css';\r\nimport revenueSourcesData from '../assets/data/revenueSources';\r\nimport availableBalancesData from '../assets/data/availableBalances';\r\nimport pdfReports from '../assets/data/pdfReports';\r\nimport { generateMultiplePDFs } from '../utils/pdfGenerator';\r\nimport pdfIcon from '../assets/images/icons/pdf.svg';\r\nimport searchIcon from '../assets/images/icons/search.svg';\r\nimport filterIcon from '../assets/images/icons/filters.svg';\r\nimport { Slider } from '@ark-ui/react';\r\nimport gsap from 'gsap';\r\n\r\nfunction CombinedComponent() {\r\n    const [revenueSources, setRevenueSources] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [selectedSources, setSelectedSources] = useState([]);\r\n    const [showFilter, setShowFilter] = useState(false);\r\n    const [amountFilterValue, setAmountFilterValue] = useState(0);\r\n    const [maxAmount, setMaxAmount] = useState(0);\r\n    const [minAmount, setMinAmount] = useState(0);\r\n    const [isDataLoaded, setIsDataLoaded] = useState(false);\r\n    const [selectedCurrencies, setSelectedCurrencies] = useState(['EUR', 'GBP', 'USD']);\r\n    const availableCurrencies = ['EUR', 'GBP', 'USD'];\r\n    const filterRef = useRef(null);\r\n    const cardRefs = useRef([]);\r\n\r\n    // Initialize filteredSources and filteredBalances with an empty array\r\n    const [filteredSources, setFilteredSources] = useState([]);\r\n    const [filteredBalances, setFilteredBalances] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const sortedData = [...revenueSourcesData].sort((a, b) =>\r\n                a.revenue_source_name.localeCompare(b.revenue_source_name)\r\n            );\r\n            setRevenueSources(sortedData);\r\n\r\n            const amounts = availableBalancesData.map(bal => bal.availableamount);\r\n            const calculatedMaxAmount = Math.max(...amounts, 0);\r\n            setMaxAmount(calculatedMaxAmount);\r\n            setAmountFilterValue(calculatedMaxAmount);\r\n\r\n            setIsDataLoaded(true);\r\n        };\r\n\r\n        fetchData();\r\n\r\n        const handleClickOutside = (event) => {\r\n            if (filterRef.current && !filterRef.current.contains(event.target)) {\r\n                setShowFilter(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    // Handler to update filteredSources based on searchTerm\r\n    useEffect(() => {\r\n        const newFilteredSources = revenueSources.filter(source =>\r\n            source.revenue_source_name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n        setFilteredSources(newFilteredSources);\r\n    }, [revenueSources, searchTerm]);\r\n\r\n    // Handler to update filteredBalances based on amountFilterValue and selectedCurrencies\r\n    useEffect(() => {\r\n        const newFilteredBalances = availableBalancesData.filter(balance => {\r\n            const amountValid = balance.availableamount >= 0 && balance.availableamount <= amountFilterValue;\r\n            const currencyValid = selectedCurrencies.includes(balance.currency_code);\r\n            return amountValid && currencyValid;\r\n        });\r\n        setFilteredBalances(newFilteredBalances);\r\n    }, [amountFilterValue, selectedCurrencies]);\r\n\r\n    // Function to handle card transitions\r\n    const updateCardVisibility = useCallback(() => {\r\n        cardRefs.current.forEach((card, index) => {\r\n            if (card) {\r\n                const source = filteredSources[index];\r\n                const balance = filteredBalances.find(bal => bal.revenue_source_name === source?.revenue_source_name);\r\n                const hasBalance = balance !== undefined;\r\n\r\n                if (!hasBalance) {\r\n                    gsap.to(card, {\r\n                        opacity: 0,\r\n                        height: 'auto',\r\n                        duration: 0.3,\r\n                        display: 'none',\r\n                        overwrite: true,\r\n                    });\r\n                } else {\r\n                    gsap.to(card, {\r\n                        opacity: 1,\r\n                        height: 'auto',\r\n                        duration: 0.3,\r\n                        display: 'block',\r\n                        overwrite: true,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }, [filteredBalances, filteredSources]);\r\n\r\n    useEffect(() => {\r\n        if (isDataLoaded) {\r\n            updateCardVisibility();\r\n        }\r\n    }, [filteredBalances, filteredSources, isDataLoaded, updateCardVisibility]);\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const handleCardClick = (sourceId) => {\r\n        setSelectedSources(prev =>\r\n            prev.includes(sourceId)\r\n                ? prev.filter(id => id !== sourceId)\r\n                : [...prev, sourceId]\r\n        );\r\n    };\r\n\r\n    const handleDownloadSelected = () => {\r\n        const selectedReports = selectedSources.map(sourceId => {\r\n            const source = revenueSources.find(s => s.revenue_source_id === sourceId);\r\n            return pdfReports.find(report => report.revenue_source_name === source.revenue_source_name);\r\n        });\r\n        generateMultiplePDFs(selectedReports);\r\n    };\r\n    const isDownloadDisabled = selectedSources.length === 0;\r\n\r\n    const getCurrencySymbol = (currencyCode) => {\r\n        switch (currencyCode) {\r\n            case 'EUR': return '€';\r\n            case 'GBP': return '£';\r\n            case 'USD': return '$';\r\n            default: return currencyCode;\r\n        }\r\n    };\r\n\r\n    const toggleFilter = () => {\r\n        setShowFilter(!showFilter);\r\n    };\r\n\r\n    const handleAmountFilterChange = (value) => {\r\n        setAmountFilterValue(value.value[0]);\r\n    };\r\n\r\n    const handleCurrencyToggle = (currency) => {\r\n        setSelectedCurrencies(prev =>\r\n            prev.includes(currency)\r\n                ? prev.filter(c => c !== currency)\r\n                : [...prev, currency]\r\n        );\r\n    };\r\n\r\n    // Function to determine the color class based on available amount\r\n    const getColorClass = (amount) => {\r\n        const firstThird = maxAmount / 3;\r\n        const secondThird = 2 * firstThird;\r\n\r\n        if (amount <= firstThird) {\r\n            return 'red';\r\n        } else if (amount <= secondThird) {\r\n            return 'orange';\r\n        } else {\r\n            return 'green';\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"combined-component-container\">\r\n            <div className=\"combined-component-header\">\r\n                <h2>Revenue Sources and Available Balances</h2>\r\n                <div className=\"header-actions\">\r\n                    <div className=\"search-container\">\r\n                        <img src={searchIcon} alt=\"Search Icon\" className=\"search-icon\" />\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Search revenue sources...\"\r\n                            value={searchTerm}\r\n                            onChange={handleSearch}\r\n                            className=\"combined-component-search\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"download-and-filter\">\r\n                        <div className=\"tooltip-container\">\r\n                            <button\r\n                                onClick={handleDownloadSelected}\r\n                                className=\"download-selected-btn\"\r\n                                disabled={isDownloadDisabled}\r\n                            >\r\n                                <img src={pdfIcon} alt=\"PDF Icon\" className=\"pdf-icon\" />\r\n                                Download Selected Reports\r\n                                {selectedSources.length > 0 && (\r\n                                    <span className=\"selected-count\">{selectedSources.length}</span>\r\n                                )}\r\n                            </button>\r\n                            <div className=\"tooltip\">\r\n                                Please select at least one Revenue Source to download.\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"filter-wrapper\">\r\n                            <button className=\"filter-button\" onClick={toggleFilter}>\r\n                                <img src={filterIcon} alt=\"Filter Icon\" className=\"filter-icon\" />\r\n                            </button>\r\n                            {showFilter && isDataLoaded && (\r\n                                <div className=\"filter-container\" ref={filterRef}>\r\n                                    <div className=\"filter-card\">\r\n                                        <h3>Filter by Available Amount</h3>\r\n                                        <div className=\"slider-container\">\r\n                                            <Slider.Root\r\n                                                defaultValue={[0, maxAmount]}\r\n                                                min={minAmount}\r\n                                                max={maxAmount}\r\n                                                onValueChange={handleAmountFilterChange}\r\n                                                aria-label=\"Volume\"\r\n                                            >\r\n                                                <Slider.Control>\r\n                                                    <Slider.Track>\r\n                                                        <Slider.Range />\r\n                                                    </Slider.Track>\r\n                                                    <Slider.Thumb index={0}>\r\n                                                        <Slider.HiddenInput />\r\n                                                        <span className=\"slider-value-label\">{amountFilterValue}</span>\r\n                                                    </Slider.Thumb>\r\n                                                </Slider.Control>\r\n                                            </Slider.Root>\r\n                                            <div className=\"slider-values\">\r\n                                                <span>{minAmount}</span>\r\n                                                <span>{maxAmount}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"filter-card\">\r\n                                        <h3>Filter by Currency</h3>\r\n                                        <div className=\"currency-filter-grid\">\r\n                                            {availableCurrencies.map(currency => (\r\n                                                <button\r\n                                                    key={currency}\r\n                                                    className={`currency-button ${selectedCurrencies.includes(currency) ? 'selected' : ''}`}\r\n                                                    onClick={() => handleCurrencyToggle(currency)}\r\n                                                >\r\n                                                    {currency}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"combined-component-grid\">\r\n                {filteredSources.map((source, index) => {\r\n                    const balance = filteredBalances.find(bal => bal.revenue_source_name === source.revenue_source_name);\r\n                    const hasBalance = balance !== undefined;\r\n                    const isSelected = selectedSources.includes(source.revenue_source_id);\r\n\r\n                    return (\r\n                        <div\r\n                            key={source.revenue_source_id}\r\n                            className={`combined-component-card ${isSelected ? 'selected' : ''}`}\r\n                            onClick={() => handleCardClick(source.revenue_source_id)}\r\n                            ref={el => (cardRefs.current[index] = el)}\r\n                        >\r\n                            {isSelected && <img src={pdfIcon} alt=\"PDF Icon\" className=\"card-pdf-icon\" />}\r\n                            <h3>{source.revenue_source_name}</h3>\r\n                            {balance ? (\r\n                                <>\r\n                                    <p className=\"available-amount-label\">Available Amount</p>\r\n                                    <p className={`available-amount-value ${getColorClass(balance.availableamount)}`}>\r\n                                        {getCurrencySymbol(balance.currency_code)}{balance.availableamount}\r\n                                    </p>\r\n                                </>\r\n                            ) : (\r\n                                <p>No available amount</p>\r\n                            )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CombinedComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}