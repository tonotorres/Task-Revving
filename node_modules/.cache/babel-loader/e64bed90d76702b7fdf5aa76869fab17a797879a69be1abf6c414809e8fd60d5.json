{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\TransactionTable.jsx\",\n  _s = $RefreshSig$();\n// src/components/TransactionTable.jsx\nimport React, { useState, useEffect, useRef } from 'react';\nimport styles from './TransactionTable.module.css';\nimport transactionsData from '../assets/data/transactions';\nimport { Pagination } from '@ark-ui/react/pagination';\nimport Sortable from 'sortablejs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionTable() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 10;\n  const totalTransactions = transactionsData.length;\n  const totalPages = Math.ceil(totalTransactions / pageSize);\n  const maxVisiblePages = 8;\n  const tableRef = useRef(null); // Creamos una referencia a la tabla\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\n      setTransactions(paginatedTransactions);\n    };\n    fetchData();\n  }, [currentPage]);\n  useEffect(() => {\n    // Llamamos a la función makeTableDraggable después de que el componente se monte\n    if (tableRef.current) {\n      makeTableDraggable(tableRef);\n    }\n  }, [transactions]); // Dependencia en transactions para que se vuelva a ejecutar si cambian los datos\n\n  const handlePageChange = details => {\n    setCurrentPage(details.page);\n  };\n  const handleEllipsisClick = direction => {\n    if (direction === 'prev') {\n      setCurrentPage(Math.max(1, currentPage - 10));\n    } else if (direction === 'next') {\n      setCurrentPage(Math.min(totalPages, currentPage + 10));\n    }\n  };\n  const getVisiblePageNumbers = () => {\n    let pages = [];\n    if (totalPages <= maxVisiblePages) {\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      pages.push(1);\n      if (currentPage <= 3) {\n        for (let i = 2; i <= 5; i++) {\n          pages.push(i);\n        }\n        pages.push('+10');\n      } else if (currentPage >= totalPages - 2) {\n        pages.push('-10');\n        for (let i = totalPages - 4; i < totalPages; i++) {\n          pages.push(i);\n        }\n      } else {\n        pages.push('-10');\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n          pages.push(i);\n        }\n        pages.push('+10');\n      }\n      pages.push(totalPages);\n    }\n    return pages;\n  };\n  function makeTableDraggable(tableRef) {\n    if (!tableRef.current) return;\n    const thead = tableRef.current.querySelector('thead');\n    const tbody = tableRef.current.querySelector('tbody');\n    if (!thead) return;\n\n    // Hacer que los encabezados sean arrastrables\n    const headerRow = thead.querySelector('tr');\n    Sortable.create(headerRow, {\n      animation: 150,\n      ghostClass: 'ghost',\n      onEnd: event => {\n        const oldIndex = event.oldIndex;\n        const newIndex = event.newIndex;\n\n        // Reordenar las columnas en el cuerpo de la tabla\n        reorderTableColumns(tbody, oldIndex, newIndex);\n      }\n    });\n  }\n  function reorderTableColumns(tbody, oldIndex, newIndex) {\n    const rows = Array.from(tbody.querySelectorAll('tr'));\n    rows.forEach(row => {\n      const cells = Array.from(row.children);\n      const movedCell = cells.splice(oldIndex, 1)[0]; // Extraer la celda movida\n      cells.splice(newIndex, 0, movedCell); // Insertar en la nueva posición\n\n      // Actualizar el DOM con el nuevo orden\n      row.innerHTML = '';\n      cells.forEach(cell => row.appendChild(cell));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ark-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination.Root, {\n        count: totalTransactions,\n        pageSize: pageSize,\n        page: currentPage,\n        onPageChange: handlePageChange,\n        children: [/*#__PURE__*/_jsxDEV(Pagination.PrevTrigger, {\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), getVisiblePageNumbers().map((page, index) => page === '-10' || page === '+10' ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ellipsis-button\",\n          onClick: () => handleEllipsisClick(page === '-10' ? 'prev' : 'next'),\n          children: page\n        }, `ellipsis-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          value: page,\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.NextTrigger, {\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ark-table\",\n      ref: tableRef,\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"Customer Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Revenue Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Transaction Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"ark-table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.customername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.revenuesourcename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.currencycode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.transactiondate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionTable, \"dxBmx86ONZAWreA80Tve5ff5RWc=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useState","useEffect","useRef","styles","transactionsData","Pagination","Sortable","jsxDEV","_jsxDEV","TransactionTable","_s","transactions","setTransactions","currentPage","setCurrentPage","pageSize","totalTransactions","length","totalPages","Math","ceil","maxVisiblePages","tableRef","fetchData","Promise","resolve","setTimeout","startIndex","endIndex","paginatedTransactions","slice","current","makeTableDraggable","handlePageChange","details","page","handleEllipsisClick","direction","max","min","getVisiblePageNumbers","pages","i","push","thead","querySelector","tbody","headerRow","create","animation","ghostClass","onEnd","event","oldIndex","newIndex","reorderTableColumns","rows","Array","from","querySelectorAll","forEach","row","cells","children","movedCell","splice","innerHTML","cell","appendChild","className","Root","count","onPageChange","PrevTrigger","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","Item","value","NextTrigger","ref","transaction","id","customername","revenuesourcename","currencycode","transactiondate","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/TransactionTable.jsx"],"sourcesContent":["// src/components/TransactionTable.jsx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport styles from './TransactionTable.module.css';\r\nimport transactionsData from '../assets/data/transactions';\r\nimport { Pagination } from '@ark-ui/react/pagination';\r\nimport Sortable from 'sortablejs';\r\n\r\nfunction TransactionTable() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 10;\r\n  const totalTransactions = transactionsData.length;\r\n  const totalPages = Math.ceil(totalTransactions / pageSize);\r\n  const maxVisiblePages = 8;\r\n\r\n  const tableRef = useRef(null); // Creamos una referencia a la tabla\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      const startIndex = (currentPage - 1) * pageSize;\r\n      const endIndex = startIndex + pageSize;\r\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\r\n      setTransactions(paginatedTransactions);\r\n    };\r\n\r\n    fetchData();\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    // Llamamos a la función makeTableDraggable después de que el componente se monte\r\n    if (tableRef.current) {\r\n      makeTableDraggable(tableRef);\r\n    }\r\n  }, [transactions]); // Dependencia en transactions para que se vuelva a ejecutar si cambian los datos\r\n\r\n  const handlePageChange = (details) => {\r\n    setCurrentPage(details.page);\r\n  };\r\n\r\n  const handleEllipsisClick = (direction) => {\r\n    if (direction === 'prev') {\r\n      setCurrentPage(Math.max(1, currentPage - 10));\r\n    } else if (direction === 'next') {\r\n      setCurrentPage(Math.min(totalPages, currentPage + 10));\r\n    }\r\n  };\r\n\r\n  const getVisiblePageNumbers = () => {\r\n    let pages = [];\r\n    if (totalPages <= maxVisiblePages) {\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      pages.push(1);\r\n\r\n      if (currentPage <= 3) {\r\n        for (let i = 2; i <= 5; i++) {\r\n          pages.push(i);\r\n        }\r\n        pages.push('+10');\r\n      } else if (currentPage >= totalPages - 2) {\r\n        pages.push('-10');\r\n        for (let i = totalPages - 4; i < totalPages; i++) {\r\n          pages.push(i);\r\n        }\r\n      } else {\r\n        pages.push('-10');\r\n        for (let i = currentPage - 1; i <= currentPage + 1; i++) {\r\n          pages.push(i);\r\n        }\r\n        pages.push('+10');\r\n      }\r\n\r\n      pages.push(totalPages);\r\n    }\r\n    return pages;\r\n  };\r\n\r\n  function makeTableDraggable(tableRef) {\r\n    if (!tableRef.current) return;\r\n\r\n    const thead = tableRef.current.querySelector('thead');\r\n    const tbody = tableRef.current.querySelector('tbody');\r\n\r\n    if (!thead) return;\r\n\r\n    // Hacer que los encabezados sean arrastrables\r\n    const headerRow = thead.querySelector('tr');\r\n\r\n    Sortable.create(headerRow, {\r\n      animation: 150,\r\n      ghostClass: 'ghost',\r\n      onEnd: (event) => {\r\n        const oldIndex = event.oldIndex;\r\n        const newIndex = event.newIndex;\r\n\r\n        // Reordenar las columnas en el cuerpo de la tabla\r\n        reorderTableColumns(tbody, oldIndex, newIndex);\r\n      },\r\n    });\r\n  }\r\n\r\n  function reorderTableColumns(tbody, oldIndex, newIndex) {\r\n    const rows = Array.from(tbody.querySelectorAll('tr'));\r\n\r\n    rows.forEach((row) => {\r\n      const cells = Array.from(row.children);\r\n      const movedCell = cells.splice(oldIndex, 1)[0]; // Extraer la celda movida\r\n      cells.splice(newIndex, 0, movedCell); // Insertar en la nueva posición\r\n\r\n      // Actualizar el DOM con el nuevo orden\r\n      row.innerHTML = '';\r\n      cells.forEach((cell) => row.appendChild(cell));\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"ark-table-container\">\r\n      <div className=\"pagination-container\">\r\n        <Pagination.Root\r\n          count={totalTransactions}\r\n          pageSize={pageSize}\r\n          page={currentPage}\r\n          onPageChange={handlePageChange}\r\n        >\r\n          <Pagination.PrevTrigger>\r\n            Anterior\r\n          </Pagination.PrevTrigger>\r\n          {getVisiblePageNumbers().map((page, index) =>\r\n            page === '-10' || page === '+10' ? (\r\n              <button\r\n                key={`ellipsis-${index}`}\r\n                className=\"ellipsis-button\"\r\n                onClick={() => handleEllipsisClick(page === '-10' ? 'prev' : 'next')}\r\n              >\r\n                {page}\r\n              </button>\r\n            ) : (\r\n              <Pagination.Item key={page} value={page}>\r\n                {page}\r\n              </Pagination.Item>\r\n            )\r\n          )}\r\n          <Pagination.NextTrigger>\r\n            Siguiente\r\n          </Pagination.NextTrigger>\r\n        </Pagination.Root>\r\n      </div>\r\n\r\n      <table className=\"ark-table\" ref={tableRef}>\r\n        <caption>Customer Transactions</caption>\r\n        <thead>\r\n          <tr>\r\n            <th className=\"ark-table-header\">ID</th>\r\n            <th className=\"ark-table-header\">Customer Name</th>\r\n            <th className=\"ark-table-header\">Revenue Source</th>\r\n            <th className=\"ark-table-header\">Currency Code</th>\r\n            <th className=\"ark-table-header\">Transaction Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map(transaction => (\r\n            <tr key={transaction.id} className=\"ark-table-row\">\r\n              <td className=\"ark-table-cell\">{transaction.id}</td>\r\n              <td className=\"ark-table-cell\">{transaction.customername}</td>\r\n              <td className=\"ark-table-cell\">{transaction.revenuesourcename}</td>\r\n              <td className=\"ark-table-cell\">{transaction.currencycode}</td>\r\n              <td className=\"ark-table-cell\">{transaction.transactiondate}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}