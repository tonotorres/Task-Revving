{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\toni.torres\\\\Desktop\\\\Proyectos\\\\toni\\\\investment-poc\\\\src\\\\components\\\\TransactionTable.jsx\",\n  _s = $RefreshSig$();\n// src/components/TransactionTable.jsx\nimport React, { useState, useEffect } from 'react';\nimport './TransactionTable.css';\nimport transactionsData from '../assets/data/transactions';\nimport { Pagination } from '@ark-ui/react/pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionTable() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageSize = 20;\n  const totalTransactions = transactionsData.length;\n  const totalPages = Math.ceil(totalTransactions / pageSize);\n  const maxVisiblePages = 8; // Define el número máximo de páginas visibles en la paginación\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await new Promise(resolve => setTimeout(resolve, 500));\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\n      setTransactions(paginatedTransactions);\n    };\n    fetchData();\n  }, [currentPage]);\n  const handlePageChange = details => {\n    setCurrentPage(details.page);\n  };\n  const getVisiblePageNumbers = () => {\n    let pages = [];\n    if (totalPages <= maxVisiblePages) {\n      // Si hay menos o igual que maxVisiblePages páginas, mostrar todas\n      for (let i = 1; i <= totalPages; i++) {\n        pages.push(i);\n      }\n    } else {\n      // Calcula el número de páginas a mostrar a cada lado de la página actual\n      let pagesToShow = maxVisiblePages - 2; // Restamos 2 para los extremos (primera y última página)\n      let sidePages = Math.floor(pagesToShow / 2);\n      let start = currentPage - sidePages;\n      let end = currentPage + sidePages;\n\n      // Ajusta start y end si estamos cerca de los extremos\n      if (start <= 1) {\n        start = 2;\n        end = Math.min(maxVisiblePages - 1, totalPages - 1);\n      }\n      if (end >= totalPages) {\n        end = totalPages - 1;\n        start = Math.max(2, totalPages - maxVisiblePages + 2);\n      }\n      pages.push(1); // Siempre mostrar la primera página\n\n      if (currentPage > sidePages + 2) {\n        pages.push('...'); // Elipsis al principio si estamos lejos del inicio\n      }\n      for (let i = start; i <= end; i++) {\n        if (i > 1 && i < totalPages) {\n          // No incluir la primera ni la última página aquí\n          pages.push(i);\n        }\n      }\n      if (currentPage < totalPages - sidePages - 1) {\n        pages.push('...'); // Elipsis al final si estamos lejos del final\n      }\n      pages.push(totalPages); // Siempre mostrar la última página\n    }\n    return pages;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ark-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: /*#__PURE__*/_jsxDEV(Pagination.Root, {\n        count: totalTransactions,\n        pageSize: pageSize,\n        page: currentPage,\n        onPageChange: handlePageChange,\n        children: [/*#__PURE__*/_jsxDEV(Pagination.PrevTrigger, {\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), getVisiblePageNumbers().map((page, index) => page === '...' ? /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {\n          children: \"...\"\n        }, `ellipsis-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          value: page,\n          children: page\n        }, page, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)), /*#__PURE__*/_jsxDEV(Pagination.NextTrigger, {\n          children: \"Siguiente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ark-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: \"Customer Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Customer Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Revenue Source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Currency Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"ark-table-header\",\n            children: \"Transaction Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"ark-table-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.customername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.revenuesourcename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.currencycode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"ark-table-cell\",\n            children: transaction.transactiondate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this)]\n        }, transaction.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_s(TransactionTable, \"qo5JSBeqhftRa9jbFN9qLasMAnk=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useState","useEffect","transactionsData","Pagination","jsxDEV","_jsxDEV","TransactionTable","_s","transactions","setTransactions","currentPage","setCurrentPage","pageSize","totalTransactions","length","totalPages","Math","ceil","maxVisiblePages","fetchData","Promise","resolve","setTimeout","startIndex","endIndex","paginatedTransactions","slice","handlePageChange","details","page","getVisiblePageNumbers","pages","i","push","pagesToShow","sidePages","floor","start","end","min","max","className","children","Root","count","onPageChange","PrevTrigger","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Ellipsis","Item","value","NextTrigger","transaction","id","customername","revenuesourcename","currencycode","transactiondate","_c","$RefreshReg$"],"sources":["C:/Users/toni.torres/Desktop/Proyectos/toni/investment-poc/src/components/TransactionTable.jsx"],"sourcesContent":["// src/components/TransactionTable.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport './TransactionTable.css';\r\nimport transactionsData from '../assets/data/transactions';\r\nimport { Pagination } from '@ark-ui/react/pagination';\r\n\r\nfunction TransactionTable() {\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const pageSize = 20;\r\n    const totalTransactions = transactionsData.length;\r\n    const totalPages = Math.ceil(totalTransactions / pageSize);\r\n    const maxVisiblePages = 8; // Define el número máximo de páginas visibles en la paginación\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            await new Promise(resolve => setTimeout(resolve, 500));\r\n            const startIndex = (currentPage - 1) * pageSize;\r\n            const endIndex = startIndex + pageSize;\r\n            const paginatedTransactions = transactionsData.slice(startIndex, endIndex);\r\n            setTransactions(paginatedTransactions);\r\n        };\r\n\r\n        fetchData();\r\n    }, [currentPage]);\r\n\r\n    const handlePageChange = (details) => {\r\n        setCurrentPage(details.page);\r\n    };\r\n\r\n    const getVisiblePageNumbers = () => {\r\n        let pages = [];\r\n        if (totalPages <= maxVisiblePages) {\r\n            // Si hay menos o igual que maxVisiblePages páginas, mostrar todas\r\n            for (let i = 1; i <= totalPages; i++) {\r\n                pages.push(i);\r\n            }\r\n        } else {\r\n            // Calcula el número de páginas a mostrar a cada lado de la página actual\r\n            let pagesToShow = maxVisiblePages - 2; // Restamos 2 para los extremos (primera y última página)\r\n            let sidePages = Math.floor(pagesToShow / 2);\r\n            let start = currentPage - sidePages;\r\n            let end = currentPage + sidePages;\r\n\r\n            // Ajusta start y end si estamos cerca de los extremos\r\n            if (start <= 1) {\r\n                start = 2;\r\n                end = Math.min(maxVisiblePages - 1, totalPages - 1);\r\n            }\r\n            if (end >= totalPages) {\r\n                end = totalPages - 1;\r\n                start = Math.max(2, totalPages - maxVisiblePages + 2);\r\n            }\r\n\r\n            pages.push(1); // Siempre mostrar la primera página\r\n\r\n            if (currentPage > sidePages + 2) {\r\n                pages.push('...'); // Elipsis al principio si estamos lejos del inicio\r\n            }\r\n\r\n            for (let i = start; i <= end; i++) {\r\n                if (i > 1 && i < totalPages) { // No incluir la primera ni la última página aquí\r\n                    pages.push(i);\r\n                }\r\n            }\r\n\r\n            if (currentPage < totalPages - sidePages - 1) {\r\n                pages.push('...'); // Elipsis al final si estamos lejos del final\r\n            }\r\n\r\n            pages.push(totalPages); // Siempre mostrar la última página\r\n        }\r\n        return pages;\r\n    };\r\n\r\n    return (\r\n        <div className=\"ark-table-container\">\r\n            <div className=\"pagination-container\">\r\n                <Pagination.Root \r\n                    count={totalTransactions} \r\n                    pageSize={pageSize} \r\n                    page={currentPage}\r\n                    onPageChange={handlePageChange}\r\n                >\r\n                    <Pagination.PrevTrigger>\r\n                        Anterior\r\n                    </Pagination.PrevTrigger>\r\n                    {getVisiblePageNumbers().map((page, index) => \r\n                        page === '...' ? (\r\n                            <Pagination.Ellipsis key={`ellipsis-${index}`}>...</Pagination.Ellipsis>\r\n                        ) : (\r\n                            <Pagination.Item key={page} value={page}>\r\n                                {page}\r\n                            </Pagination.Item>\r\n                        )\r\n                    )}\r\n                    <Pagination.NextTrigger>\r\n                        Siguiente\r\n                    </Pagination.NextTrigger>\r\n                </Pagination.Root>\r\n            </div>\r\n\r\n            <table className=\"ark-table\">\r\n                <caption>Customer Transactions</caption>\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"ark-table-header\">ID</th>\r\n                        <th className=\"ark-table-header\">Customer Name</th>\r\n                        <th className=\"ark-table-header\">Revenue Source</th>\r\n                        <th className=\"ark-table-header\">Currency Code</th>\r\n                        <th className=\"ark-table-header\">Transaction Date</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {transactions.map(transaction => (\r\n                        <tr key={transaction.id} className=\"ark-table-row\">\r\n                            <td className=\"ark-table-cell\">{transaction.id}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.customername}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.revenuesourcename}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.currencycode}</td>\r\n                            <td className=\"ark-table-cell\">{transaction.transactiondate}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TransactionTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}